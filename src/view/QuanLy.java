/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import controller.DAO;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import model.HoKhau;
import java.util.*;

/**
 *
 * @author 1920
 */
public class QuanLy extends javax.swing.JFrame implements MouseListener, ActionListener{

    //DefaultTableModel model; /*Đối tượng model để thao tác với bảng, sẽ được gọi
    //sẽ được gọi đến trong các phương thức bên dưới*/
    /**
     * Creates new form QuanLy
     */
    private int selectedRow;
    public QuanLy() {
        //initComponents();
        MyInitComponents();
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        itemXemThayDoi = new javax.swing.JMenuItem();
        itemThemNhanKhau = new javax.swing.JMenuItem();
        itemChuyenHo = new javax.swing.JMenuItem();
        itemThayDoiKhac = new javax.swing.JMenuItem();
        itemTachHo = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSoHoKhau = new javax.swing.JTable();
        txtSearchInput = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        itemXemThayDoi.setText("Xem lịch sử thay đổi nhân khẩu");
        popupMenu.add(itemXemThayDoi);

        itemThemNhanKhau.setText("Thêm nhân khẩu mới");
        popupMenu.add(itemThemNhanKhau);

        itemChuyenHo.setText("Cả hộ chuyển đi nơi khác");
        popupMenu.add(itemChuyenHo);

        itemThayDoiKhac.setText("Thay đổi khác");
        popupMenu.add(itemThayDoiKhac);

        itemTachHo.setText("Tách hộ");
        popupMenu.add(itemTachHo);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblSoHoKhau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số hộ khẩu", "Họ tên chủ hộ", "Số nhà", "Đường phố (ấp)", "Phường (xã, thị trấn)", "Quận (huyện)"
            }
        ));
        JTableHeader tableHeader = tblSoHoKhau.getTableHeader();
        ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        tblSoHoKhau.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    JTable target = (JTable) e.getSource();
                    int row = target.getSelectedRow();
                }
            }
        });

        popupMenu.add( new JMenuItem("Thêm nhân khẩu mới") );
        popupMenu.add( new JMenuItem("Chuyển đi nơi khác") );
        popupMenu.add( new JMenuItem("Thay đổi chủ hộ") );
        popupMenu.add( new JMenuItem("Tách hộ") );
        popupMenu.add( new JMenuItem("Khai báo tạm trú") );

        tblSoHoKhau.setComponentPopupMenu(popupMenu);
        jScrollPane1.setViewportView(tblSoHoKhau);
        if (tblSoHoKhau.getColumnModel().getColumnCount() > 0) {
            tblSoHoKhau.getColumnModel().getColumn(0).setMinWidth(75);
            tblSoHoKhau.getColumnModel().getColumn(0).setPreferredWidth(75);
            tblSoHoKhau.getColumnModel().getColumn(0).setMaxWidth(75);
            tblSoHoKhau.getColumnModel().getColumn(2).setMinWidth(75);
            tblSoHoKhau.getColumnModel().getColumn(2).setPreferredWidth(75);
            tblSoHoKhau.getColumnModel().getColumn(2).setMaxWidth(75);
        }

        txtSearchInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchInputActionPerformed(evt);
            }
        });

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Tìm kiếm theo từ khoá");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(btnSearch))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MyInitComponents(){
        
        popupMenu = new javax.swing.JPopupMenu();
        itemXemThayDoi = new javax.swing.JMenuItem();
        itemThemNhanKhau = new javax.swing.JMenuItem();
        itemChuyenHo = new javax.swing.JMenuItem();
        itemThayDoiKhac = new javax.swing.JMenuItem();
        itemTachHo = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSoHoKhau = new javax.swing.JTable();
        txtSearchInput = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        itemXemThayDoi.setText("Xem lịch sử thay đổi nhân khẩu");
        popupMenu.add(itemXemThayDoi);

        itemThemNhanKhau.setText("Thêm nhân khẩu mới");
        popupMenu.add(itemThemNhanKhau);
//        itemThemNhanKhau.addMouseListener(new MouseAdapter(){
//            public void MouseClicked(MouseEvent e){
//                if(e.getButton()==e.BUTTON1){
//                    new GiayKhaiSinh().setVisible(true);
//                }
//            }
//        });
        itemChuyenHo.setText("Cả hộ chuyển đi nơi khác");
        popupMenu.add(itemChuyenHo);

        itemThayDoiKhac.setText("Thay đổi khác");
        popupMenu.add(itemThayDoiKhac);

        itemTachHo.setText("Tách hộ");
        popupMenu.add(itemTachHo);
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblSoHoKhau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số hộ khẩu", "Họ tên chủ hộ", "Số nhà", "Đường phố (ấp)", "Phường (xã, thị trấn)", "Quận (huyện)"
            }
        ));
        JTableHeader tableHeader = tblSoHoKhau.getTableHeader();
        ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

        tblSoHoKhau.setDefaultEditor(Object.class, null);

        //Double click vào hàng mở ra frame SoHoKhau
        tblSoHoKhau.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    JTable target = (JTable) e.getSource();
                    int row = target.getSelectedRow();
                    
                    SoHoKhau shk = new SoHoKhau();
                    shk.setVisible(true);
                    shk.setLocationRelativeTo(null);
                    
                }
            }
        });

//        JMenuItem itemXemThayDoi = new JMenuItem("Xem lịch sử thay đổi nhân khẩu");
//        JMenuItem itemThemNhanKhau = new JMenuItem("Thêm nhân khẩu mới");
//        JMenuItem itemChuyenHo = new JMenuItem("Cả hộ chuyển đi nơi khác");
//        JMenuItem itemThayChuHo = new JMenuItem("Thay đổi chủ hộ");
//        JMenuItem itemTachHo = new JMenuItem("Tách hộ");
//        
//        popupMenu.add(itemXemThayDoi);
//        popupMenu.add(itemThemNhanKhau);
//        popupMenu.add(itemChuyenHo);
//        popupMenu.add(itemThayChuHo);
//        popupMenu.add(itemTachHo );
        //popupMenu.add( new JMenuItem("Khai báo tạm trú") );

        tblSoHoKhau.setComponentPopupMenu(popupMenu);
        
        itemChuyenHo.addActionListener(this);
        itemTachHo.addActionListener(this);
        itemThayDoiKhac.addActionListener(this);
        itemThemNhanKhau.addActionListener(this);
        itemXemThayDoi.addActionListener(this);        
        
        tblSoHoKhau.addMouseListener(new TableMouseListener(tblSoHoKhau));
        
        
        
        jScrollPane1.setViewportView(tblSoHoKhau);
        if (tblSoHoKhau.getColumnModel().getColumnCount() > 0) {
            tblSoHoKhau.getColumnModel().getColumn(0).setMinWidth(75);
            tblSoHoKhau.getColumnModel().getColumn(0).setPreferredWidth(75);
            tblSoHoKhau.getColumnModel().getColumn(0).setMaxWidth(75);
            tblSoHoKhau.getColumnModel().getColumn(2).setMinWidth(75);
            tblSoHoKhau.getColumnModel().getColumn(2).setPreferredWidth(75);
            tblSoHoKhau.getColumnModel().getColumn(2).setMaxWidth(75);
        }

        txtSearchInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchInputActionPerformed(evt);
            }
        });

        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Tìm kiếm theo từ khoá");



        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(btnSearch))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );


        pack();
    }
    
    private void txtSearchInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchInputActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        ArrayList<HoKhau> list = (new DAO()).getHoKhauList(txtSearchInput.getText());
        DefaultTableModel model = (DefaultTableModel) tblSoHoKhau.getModel();
        for (HoKhau hk : list){
            model.addRow(new Object[]{
            hk.getId(), hk.getTen(), hk.getSoNha(), hk.getDuong(), hk.getPhuong(), hk.getThanhPho()
        });
        }
    }//GEN-LAST:event_btnSearchActionPerformed
 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JMenuItem itemChuyenHo;
    private javax.swing.JMenuItem itemTachHo;
    private javax.swing.JMenuItem itemThayDoiKhac;
    private javax.swing.JMenuItem itemThemNhanKhau;
    private javax.swing.JMenuItem itemXemThayDoi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JTable tblSoHoKhau;
    private javax.swing.JTextField txtSearchInput;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JMenuItem menu = (JMenuItem) e.getSource();
        
        if (menu == itemChuyenHo) {
            chuyenHo((int) tblSoHoKhau.getValueAt(selectedRow, 0));
        } else if (menu == itemTachHo) {
            tachHo((int) tblSoHoKhau.getValueAt(selectedRow, 0));
        } else if (menu == itemThayDoiKhac) {
            thayDoiKhac((int) tblSoHoKhau.getValueAt(selectedRow, 0));
        } else if (menu == itemThemNhanKhau){
            themNhanKhau(((Integer)tblSoHoKhau.getValueAt(selectedRow, 0)).intValue());
        } else if (menu == itemXemThayDoi){
            xemThayDoi((int) tblSoHoKhau.getValueAt(selectedRow, 0));
        }
        
    }

    private void chuyenHo(int id) {
        HoChuyenDiaChi cdc = new HoChuyenDiaChi(this, rootPaneCheckingEnabled);
        cdc.setVisible(true);
        cdc.setLocationRelativeTo(null);
    }

    private void tachHo(int id) {
        TachHo th = new TachHo();
        th.setVisible(true);
        th.setLocationRelativeTo(null);
    }

    private void thayDoiKhac(int id) {
        ThayDoiKhac tdk = new ThayDoiKhac(this, rootPaneCheckingEnabled);
        tdk.setVisible(true);
        tdk.setLocationRelativeTo(null);

    }

    private void themNhanKhau(int id) {
        GiayKhaiSinh gks = new GiayKhaiSinh(id);
        gks.setVisible(true);
        gks.setLocationRelativeTo(this);
    }

    private void xemThayDoi(int id) {

    }

    public class TableMouseListener extends MouseAdapter {
     
        private JTable table;
     
        public TableMouseListener(JTable table) {
        this.table = table;
        }
     
        @Override
        public void mousePressed(MouseEvent event) {
        // selects the row at which point the mouse is clicked
        Point point = event.getPoint();
        int currentRow = table.rowAtPoint(point);
        selectedRow=currentRow;
        table.setRowSelectionInterval(currentRow, currentRow);
        }
    }
}
